{"Structs/_SWIMPrettyMetadataLogHandler.html#/s:7Logging10LogHandlerP11metadataKeyAA6LoggerV13MetadataValueOSgSS_tcip":{"name":"subscript(metadataKey:)","parent_name":"_SWIMPrettyMetadataLogHandler"},"Structs/_SWIMPrettyMetadataLogHandler.html#/s:7Logging10LogHandlerP8metadataSDySSAA6LoggerV13MetadataValueOGvp":{"name":"metadata","parent_name":"_SWIMPrettyMetadataLogHandler"},"Structs/_SWIMPrettyMetadataLogHandler.html#/s:7Logging10LogHandlerP8logLevelAA6LoggerV0E0Ovp":{"name":"logLevel","parent_name":"_SWIMPrettyMetadataLogHandler"},"Structs/_SWIMPrettyMetadataLogHandler.html#/s:7Logging10LogHandlerP3log5level7message8metadata6source4file8function4lineyAA6LoggerV5LevelO_AM7MessageVSDySSAM13MetadataValueOGSgS3SSutF":{"name":"log(level:message:metadata:source:file:function:line:)","parent_name":"_SWIMPrettyMetadataLogHandler"},"Structs/SWIMLifeguardSettings.html#/s:4SWIM21SWIMLifeguardSettingsVACycfc":{"name":"init()","abstract":"<p>Create default settings.</p>","parent_name":"SWIMLifeguardSettings"},"Structs/SWIMLifeguardSettings.html#/s:4SWIM21SWIMLifeguardSettingsV24maxLocalHealthMultiplierSivp":{"name":"maxLocalHealthMultiplier","abstract":"<p>Local health multiplier is a part of Lifeguard extensions to SWIM.","parent_name":"SWIMLifeguardSettings"},"Structs/SWIMLifeguardSettings.html#/s:4SWIM21SWIMLifeguardSettingsV19suspicionTimeoutMax8Dispatch0G12TimeIntervalOvp":{"name":"suspicionTimeoutMax","abstract":"<p>Suspicion timeouts are specified as number of probe intervals.</p>","parent_name":"SWIMLifeguardSettings"},"Structs/SWIMLifeguardSettings.html#/s:4SWIM21SWIMLifeguardSettingsV29indirectPingTimeoutMultiplierSdvp":{"name":"indirectPingTimeoutMultiplier","abstract":"<p>To ensure ping origin have time to process .nack, indirect ping timeout should always be shorter than originator&rsquo;s timeout","parent_name":"SWIMLifeguardSettings"},"Structs/SWIMLifeguardSettings.html#/s:4SWIM21SWIMLifeguardSettingsV19suspicionTimeoutMin8Dispatch0G12TimeIntervalOvp":{"name":"suspicionTimeoutMin","abstract":"<p>Suspicion timeouts are specified as number of probe intervals.</p>","parent_name":"SWIMLifeguardSettings"},"Structs/SWIMLifeguardSettings.html#/s:4SWIM21SWIMLifeguardSettingsV24maxIndependentSuspicionsSivp":{"name":"maxIndependentSuspicions","abstract":"<p>A number of independent suspicions required for a suspicion timeout to fully decay to a minimal value.</p>","parent_name":"SWIMLifeguardSettings"},"Structs/SWIMGossipSettings.html#/s:4SWIM18SWIMGossipSettingsVACycfc":{"name":"init()","abstract":"<p>Create default settings.</p>","parent_name":"SWIMGossipSettings"},"Structs/SWIMGossipSettings.html#/s:4SWIM18SWIMGossipSettingsV28maxNumberOfMessagesPerGossipSivp":{"name":"maxNumberOfMessagesPerGossip","abstract":"<p>Limits the number of <code>GossipPayload</code>s to be piggy-backed in a single message.</p>","parent_name":"SWIMGossipSettings"},"Structs/SWIMGossipSettings.html#/s:4SWIM18SWIMGossipSettingsV19gossipedEnoughTimes_7membersSbA2AO6GossipV_SitF":{"name":"gossipedEnoughTimes(_:members:)","abstract":"<p>Each gossip (i.e. an observation by this specific node of a specific node&rsquo;s specific status),","parent_name":"SWIMGossipSettings"},"Structs/SWIMGossipSettings.html#/s:4SWIM18SWIMGossipSettingsV33gossipedEnoughTimesBaseMultiplierSdvp":{"name":"gossipedEnoughTimesBaseMultiplier","abstract":"<p>Used to adjust the <code>gossipedEnoughTimes</code> value.</p>","parent_name":"SWIMGossipSettings"},"Structs/SWIMGossipSettings.html":{"name":"SWIMGossipSettings","abstract":"<p>Settings specific to the gossip payloads used in the SWIM gossip dissemination subsystem.</p>"},"Structs/SWIMLifeguardSettings.html":{"name":"SWIMLifeguardSettings","abstract":"<p>Lifeguard is a set of extensions to SWIM that helps reducing false positive failure detections.</p>"},"Structs/_SWIMPrettyMetadataLogHandler.html":{"name":"_SWIMPrettyMetadataLogHandler","abstract":"<p>Pretty log formatter which prints log lines in the following multi line format,"},"Protocols/SWIMProtocol.html#/s:4SWIM12SWIMProtocolP18onPeriodicPingTickSayA2AO8InstanceC0deF9DirectiveOGyF":{"name":"onPeriodicPingTick()","abstract":"<p>MUST be invoked periodically, in intervals of <code>self.swim.dynamicLHMProtocolInterval</code>.</p>","parent_name":"SWIMProtocol"},"Protocols/SWIMProtocol.html#/s:4SWIM12SWIMProtocolP6onPing10pingOrigin7payload14sequenceNumberSayA2AO8InstanceC0D9DirectiveOGAA08SWIMPingF4Peer_p_AH13GossipPayloadOs6UInt32VtF":{"name":"onPing(pingOrigin:payload:sequenceNumber:)","abstract":"<p>MUST be invoked whenever a <code>ping</code> message is received.</p>","parent_name":"SWIMProtocol"},"Protocols/SWIMProtocol.html#/s:4SWIM12SWIMProtocolP13onPingRequest6target04pingE6Origin7payload14sequenceNumberSayA2AO8InstanceC0dE9DirectiveOGAA8SWIMPeer_p_AA08SWIMPingeH4Peer_pAI13GossipPayloadOs6UInt32VtF":{"name":"onPingRequest(target:pingRequestOrigin:payload:sequenceNumber:)","abstract":"<p>MUST be invoked when a <code>pingRequest</code> is received.</p>","parent_name":"SWIMProtocol"},"Protocols/SWIMProtocol.html#/s:4SWIM12SWIMProtocolP14onPingResponse8response17pingRequestOrigin0gH14SequenceNumberSayA2AO8InstanceC0dE9DirectiveOGAH0dE0O_AA08SWIMPinghI4Peer_pSgs6UInt32VSgtF":{"name":"onPingResponse(response:pingRequestOrigin:pingRequestSequenceNumber:)","abstract":"<p>MUST be invoked when a ping response (or timeout) occur for a specific ping.</p>","parent_name":"SWIMProtocol"},"Protocols/SWIMProtocol.html#/s:4SWIM12SWIMProtocolP21onPingRequestResponse_6pingedSayA2AO8InstanceC0deF9DirectiveOGAF0dF0O_AA8SWIMPeer_ptF":{"name":"onPingRequestResponse(_:pinged:)","abstract":"<p>MUST be invoked be exactly in one of the two following situations:</p>","parent_name":"SWIMProtocol"},"Protocols/SWIMProtocol.html#/s:4SWIM12SWIMProtocolP26onEveryPingRequestResponse_6pingedSayA2AO8InstanceC0efG9DirectiveOGAF0eG0O_AA8SWIMPeer_ptF":{"name":"onEveryPingRequestResponse(_:pinged:)","abstract":"<p>MUST be invoked whenever a response to a <code>pingRequest</code> (an ack, nack or lack response i.e. a timeout) happens.</p>","parent_name":"SWIMProtocol"},"Protocols/SWIMProtocol.html#/s:4SWIM12SWIMProtocolP11confirmDead4peerA2AO8InstanceC07ConfirmD9DirectiveOAA8SWIMPeer_p_tF":{"name":"confirmDead(peer:)","abstract":"<p>Optional, only relevant when using <code>settings.unreachable</code> status mode (which is disabled by default).</p>","parent_name":"SWIMProtocol"},"Protocols/SWIMPeer.html#/s:4SWIM8SWIMPeerP4ping7payload4from7timeout14sequenceNumber10onResponseyA2AO13GossipPayloadO_AA18SWIMPingOriginPeer_p8Dispatch0P12TimeIntervalOs6UInt32Vys6ResultOyAJ04PingJ0Os5Error_pGctF":{"name":"ping(payload:from:timeout:sequenceNumber:onResponse:)","abstract":"<p>Perform a probe of this peer by sending a <code>ping</code> message.</p>","parent_name":"SWIMPeer"},"Protocols/SWIMPeer.html#/s:4SWIM8SWIMPeerP11pingRequest6target7payload4from7timeout14sequenceNumber10onResponseyAaB_p_A2AO13GossipPayloadOAA08SWIMPingD10OriginPeer_p8Dispatch0R12TimeIntervalOs6UInt32Vys6ResultOyAK04PingL0Os5Error_pGctF":{"name":"pingRequest(target:payload:from:timeout:sequenceNumber:onResponse:)","abstract":"<p>Send a ping request to this peer, asking it to perform an &ldquo;indirect ping&rdquo; of the target on our behalf.</p>","parent_name":"SWIMPeer"},"Protocols/SWIMPingRequestOriginPeer.html#/s:4SWIM25SWIMPingRequestOriginPeerP4nack13acknowledging6targetys6UInt32V_AA8SWIMPeer_ptF":{"name":"nack(acknowledging:target:)","abstract":"<p>&ldquo;Negative acknowledge&rdquo; a ping.</p>","parent_name":"SWIMPingRequestOriginPeer"},"Protocols/SWIMPingOriginPeer.html#/s:4SWIM18SWIMPingOriginPeerP3ack13acknowledging6target11incarnation7payloadys6UInt32V_AA8SWIMPeer_ps6UInt64VA2AO13GossipPayloadOtF":{"name":"ack(acknowledging:target:incarnation:payload:)","abstract":"<p>Acknowledge a <code>ping</code>.</p>","parent_name":"SWIMPingOriginPeer"},"Protocols/SWIMAddressablePeer.html#/s:4SWIM19SWIMAddressablePeerP4node17ClusterMembership4NodeVvp":{"name":"node","abstract":"<p>Node that this peer is representing.</p>","parent_name":"SWIMAddressablePeer"},"Protocols/SWIMAddressablePeer.html":{"name":"SWIMAddressablePeer","abstract":"<p>Any peer in the cluster, can be used used to identify a peer using its unique node that it represents.</p>"},"Protocols/SWIMPingOriginPeer.html":{"name":"SWIMPingOriginPeer","abstract":"<p>SWIM A peer which originated a <code>ping</code>, should be replied to with an <code>ack</code>.</p>"},"Protocols/SWIMPingRequestOriginPeer.html":{"name":"SWIMPingRequestOriginPeer","abstract":"<p>A SWIM peer which originated a <code>pingRequest</code> and thus can receive either an <code>ack</code> or <code>nack</code> from the intermediary.</p>"},"Protocols/SWIMPeer.html":{"name":"SWIMPeer","abstract":"<p>SWIM peer which can be initiated contact with, by sending ping or ping request messages.</p>"},"Protocols/SWIMProtocol.html":{"name":"SWIMProtocol","abstract":"<p>This protocol defines all callbacks that a SWIM Shell (in other words, &ldquo;runtime&rdquo;) must implement to properly drive"},"Enums/SWIM/Status.html#/s:4SWIMAAO6StatusO5aliveyADs6UInt64V_tcADmF":{"name":"alive(incarnation:)","abstract":"<p>Indicates an <code>alive</code> member of the cluster, i.e. if is reachable and properly replies to all probes on time.</p>","parent_name":"Status"},"Enums/SWIM/Status.html#/s:4SWIMAAO6StatusO7suspectyADs6UInt64V_Shy17ClusterMembership4NodeVGtcADmF":{"name":"suspect(incarnation:suspectedBy:)","abstract":"<p>Indicates a <code>suspect</code> member of the cluster, meaning that it did not reply on time to probing and MAY be unreachable.","parent_name":"Status"},"Enums/SWIM/Status.html#/s:4SWIMAAO6StatusO11unreachableyADs6UInt64V_tcADmF":{"name":"unreachable(incarnation:)","abstract":"<p>Extension from traditional SWIM states: indicates an unreachable node, under traditional SWIM it would have","parent_name":"Status"},"Enums/SWIM/Status.html#/s:4SWIMAAO6StatusO4deadyA2DmF":{"name":"dead","abstract":"<p>Indicates","parent_name":"Status"},"Enums/SWIM/Status.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Status"},"Enums/SWIM/Status.html#/s:4SWIMAAO6StatusO11incarnations6UInt64VSgvp":{"name":"incarnation","abstract":"<p>Only <code>alive</code> or <code>suspect</code> members carry an incarnation number.</p>","parent_name":"Status"},"Enums/SWIM/Status.html#/s:4SWIMAAO6StatusO7isAliveSbvp":{"name":"isAlive","parent_name":"Status"},"Enums/SWIM/Status.html#/s:4SWIMAAO6StatusO9isSuspectSbvp":{"name":"isSuspect","parent_name":"Status"},"Enums/SWIM/Status.html#/s:4SWIMAAO6StatusO13isUnreachableSbvp":{"name":"isUnreachable","parent_name":"Status"},"Enums/SWIM/Status.html#/s:4SWIMAAO6StatusO6isDeadSbvp":{"name":"isDead","parent_name":"Status"},"Enums/SWIM/Status.html#/s:4SWIMAAO6StatusO10supersedesySbADF":{"name":"supersedes(_:)","parent_name":"Status"},"Enums/SWIM/Settings/UnreachabilitySettings.html#/s:4SWIMAAO8SettingsV014UnreachabilityB0O8disabledyA2FmF":{"name":"disabled","abstract":"<p>Do not use the .unreachable state and just like classic SWIM automatically announce a node as <code>.dead</code>,","parent_name":"UnreachabilitySettings"},"Enums/SWIM/Settings/UnreachabilitySettings.html#/s:4SWIMAAO8SettingsV014UnreachabilityB0O7enabledyA2FmF":{"name":"enabled","abstract":"<p>Enables the <code>.unreachable</code> status extension.","parent_name":"UnreachabilitySettings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsVADycfc":{"name":"init()","abstract":"<p>Create default settings.</p>","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV6logger7Logging6LoggerVvp":{"name":"logger","abstract":"<p>Logger used by the instance and shell (unless the specific shell implementation states otherwise).</p>","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV8logLevel7Logging6LoggerV0D0Ovp":{"name":"logLevel","abstract":"<p>Convenience setting to change the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV6logger7Logging6LoggerVvp\">logger</a></code>&lsquo;s log level.</p>","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV6gossipAA010SWIMGossipB0Vvp":{"name":"gossip","abstract":"<p>Gossip settings, configures how the protocol period time intervals and gossip characteristics.</p>","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV9lifeguardAA013SWIMLifeguardB0Vvp":{"name":"lifeguard","abstract":"<p>Settings of the Lifeguard extensions to the SWIM protocol.</p>","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV4node17ClusterMembership4NodeVSgvp":{"name":"node","abstract":"<p>Configures the node of this SWIM instance explicitly, including allowing setting it&rsquo;s UID.</p>","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV18indirectProbeCountSivp":{"name":"indirectProbeCount","abstract":"<p>Number of indirect probes that will be issued once a direct ping probe has failed to reply in time with an ack.</p>","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV20initialContactPointsShy17ClusterMembership4NodeVGvp":{"name":"initialContactPoints","abstract":"<p>Optional feature: Set of &ldquo;initial contact points&rdquo; to automatically contact and join upon starting a node</p>","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV13probeInterval8Dispatch0e4TimeD0Ovp":{"name":"probeInterval","abstract":"<p>Interval at which gossip messages should be issued.","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV11pingTimeout8Dispatch0E12TimeIntervalOvp":{"name":"pingTimeout","abstract":"<p>Time amount after which a sent ping without ack response is considered timed-out.","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV14unreachabilityAD014UnreachabilityB0Ovp":{"name":"unreachability","abstract":"<p>Optional SWIM Protocol Extension: <code>SWIM.MemberStatus.unreachable</code></p>","parent_name":"Settings"},"Enums/SWIM/Settings/UnreachabilitySettings.html":{"name":"UnreachabilitySettings","abstract":"<p>Configure how unreachability should be handled by this instance.</p>","parent_name":"Settings"},"Enums/SWIM/Settings.html#/traceLogLevel":{"name":"traceLogLevel","abstract":"<p>When enabled traces <em>all</em> incoming SWIM protocol communication (remote messages).</p>","parent_name":"Settings"},"Enums/SWIM/Settings.html#/s:4SWIMAAO8SettingsV13traceLogLevel7Logging6LoggerV0E0OSgvp":{"name":"traceLogLevel","abstract":"<p>When enabled traces <em>all</em> incoming SWIM protocol communication (remote messages).</p>","parent_name":"Settings"},"Enums/SWIM/Instance/LHModifierEvent.html#/s:4SWIMAAO8InstanceC15LHModifierEventO15successfulProbeyA2FmF":{"name":"successfulProbe","abstract":"<p>A successful ping/ack probe cycle was completed.</p>","parent_name":"LHModifierEvent"},"Enums/SWIM/Instance/LHModifierEvent.html#/s:4SWIMAAO8InstanceC15LHModifierEventO11failedProbeyA2FmF":{"name":"failedProbe","abstract":"<p>A direct ping/ack cycle has failed (timed-out).</p>","parent_name":"LHModifierEvent"},"Enums/SWIM/Instance/LHModifierEvent.html#/s:4SWIMAAO8InstanceC15LHModifierEventO31refutingSuspectMessageAboutSelfyA2FmF":{"name":"refutingSuspectMessageAboutSelf","abstract":"<p>Some other member has suspected this member, and we had to refute the suspicion.</p>","parent_name":"LHModifierEvent"},"Enums/SWIM/Instance/LHModifierEvent.html#/s:4SWIMAAO8InstanceC15LHModifierEventO19probeWithMissedNackyA2FmF":{"name":"probeWithMissedNack","abstract":"<p>During a <code>pingRequest</code> the ping request origin (us) received a timeout without seeing <code>.nack</code>","parent_name":"LHModifierEvent"},"Enums/SWIM/Instance/ConfirmDeadDirective.html#/s:4SWIMAAO8InstanceC20ConfirmDeadDirectiveO7appliedyAfB24MemberStatusChangedEventV_tcAFmF":{"name":"applied(change:)","abstract":"<p>The change was applied and caused a membership change.</p>","parent_name":"ConfirmDeadDirective"},"Enums/SWIM/Instance/ConfirmDeadDirective.html#/s:4SWIMAAO8InstanceC20ConfirmDeadDirectiveO7ignoredyA2FmF":{"name":"ignored","abstract":"<p>The confirmation had not effect, either the peer was not known, or is already dead.</p>","parent_name":"ConfirmDeadDirective"},"Enums/SWIM/Instance/GossipProcessedDirective.html#/s:4SWIMAAO8InstanceC24GossipProcessedDirectiveO7appliedyAfB24MemberStatusChangedEventVSg_tcAFmF":{"name":"applied(change:)","abstract":"<p>The gossip was applied to the local membership view and an event may want to be emitted for it.</p>","parent_name":"GossipProcessedDirective"},"Enums/SWIM/Instance/PingRequestResponseDirective.html#/s:4SWIMAAO8InstanceC28PingRequestResponseDirectiveO15gossipProcessedyAfD06GossiphF0OcAFmF":{"name":"gossipProcessed(_:)","abstract":"<p>Indicates that incoming gossip was processed and the membership may have changed because of it,","parent_name":"PingRequestResponseDirective"},"Enums/SWIM/Instance/PingRequestResponseDirective.html#/s:4SWIMAAO8InstanceC28PingRequestResponseDirectiveO5aliveyAfB6StatusO_tcAFmF":{"name":"alive(previousStatus:)","abstract":"<p>Undocumented</p>","parent_name":"PingRequestResponseDirective"},"Enums/SWIM/Instance/PingRequestResponseDirective.html#/s:4SWIMAAO8InstanceC28PingRequestResponseDirectiveO12nackReceivedyA2FmF":{"name":"nackReceived","abstract":"<p>Undocumented</p>","parent_name":"PingRequestResponseDirective"},"Enums/SWIM/Instance/PingRequestResponseDirective.html#/s:4SWIMAAO8InstanceC28PingRequestResponseDirectiveO13unknownMemberyA2FmF":{"name":"unknownMember","abstract":"<p>Indicates that the <code>target</code> of the ping response is not known to this peer anymore,","parent_name":"PingRequestResponseDirective"},"Enums/SWIM/Instance/PingRequestResponseDirective.html#/s:4SWIMAAO8InstanceC28PingRequestResponseDirectiveO12newlySuspectyAfB6StatusO_AB6MemberVtcAFmF":{"name":"newlySuspect(previousStatus:suspect:)","abstract":"<p>Undocumented</p>","parent_name":"PingRequestResponseDirective"},"Enums/SWIM/Instance/PingRequestResponseDirective.html#/s:4SWIMAAO8InstanceC28PingRequestResponseDirectiveO14alreadySuspectyA2FmF":{"name":"alreadySuspect","abstract":"<p>Undocumented</p>","parent_name":"PingRequestResponseDirective"},"Enums/SWIM/Instance/PingRequestResponseDirective.html#/s:4SWIMAAO8InstanceC28PingRequestResponseDirectiveO18alreadyUnreachableyA2FmF":{"name":"alreadyUnreachable","abstract":"<p>Undocumented</p>","parent_name":"PingRequestResponseDirective"},"Enums/SWIM/Instance/PingRequestResponseDirective.html#/s:4SWIMAAO8InstanceC28PingRequestResponseDirectiveO11alreadyDeadyA2FmF":{"name":"alreadyDead","abstract":"<p>Undocumented</p>","parent_name":"PingRequestResponseDirective"},"Enums/SWIM/Instance/PingRequestResponseDirective.html#/s:4SWIMAAO8InstanceC28PingRequestResponseDirectiveO23ignoredDueToOlderStatusyAfB0K0O_tcAFmF":{"name":"ignoredDueToOlderStatus(currentStatus:)","abstract":"<p>The incoming gossip is older than already known information about the target peer (by incarnation), and was (safely) ignored.","parent_name":"PingRequestResponseDirective"},"Enums/SWIM/Instance/PingRequestDirective.html#/s:4SWIMAAO8InstanceC20PingRequestDirectiveO15gossipProcessedyAfD06GossipgE0OcAFmF":{"name":"gossipProcessed(_:)","abstract":"<p>Indicates that incoming gossip was processed and the membership may have changed because of it,","parent_name":"PingRequestDirective"},"Enums/SWIM/Instance/PingRequestDirective.html#/s:4SWIMAAO8InstanceC20PingRequestDirectiveO04sendC0yAfA8SWIMPeer_p_AB13GossipPayloadOAA08SWIMPingD10OriginPeer_ps6UInt32V8Dispatch0N12TimeIntervalOAMtcAFmF":{"name":"sendPing(target:payload:pingRequestOrigin:pingRequestSequenceNumber:timeout:pingSequenceNumber:)","abstract":"<p>Send a ping to the requested <code>target</code> peer using the provided timeout and sequenceNumber.</p>","parent_name":"PingRequestDirective"},"Enums/SWIM/Instance/SendPingRequestDirective/PingRequestDetail.html#/s:4SWIMAAO8InstanceC24SendPingRequestDirectiveV0dE6DetailV06peerTodE7ThroughAA8SWIMPeer_pvp":{"name":"peerToPingRequestThrough","abstract":"<p>Marks the peer the <code>pingRequest</code> should be sent to.</p>","parent_name":"PingRequestDetail"},"Enums/SWIM/Instance/SendPingRequestDirective/PingRequestDetail.html#/s:4SWIMAAO8InstanceC24SendPingRequestDirectiveV0dE6DetailV7payloadAB13GossipPayloadOvp":{"name":"payload","abstract":"<p>Additional gossip to carry with the <code>pingRequest</code></p>","parent_name":"PingRequestDetail"},"Enums/SWIM/Instance/SendPingRequestDirective/PingRequestDetail.html#/s:4SWIMAAO8InstanceC24SendPingRequestDirectiveV0dE6DetailV14sequenceNumbers6UInt32Vvp":{"name":"sequenceNumber","abstract":"<p>Sequence number to assign to this <code>pingRequest</code>.</p>","parent_name":"PingRequestDetail"},"Enums/SWIM/Instance/SendPingRequestDirective.html#/s:4SWIMAAO8InstanceC24SendPingRequestDirectiveV6targetAA8SWIMPeer_pvp":{"name":"target","abstract":"<p>Target that the should be probed by the <code>requestDetails.memberToPingRequestThrough</code> peers.</p>","parent_name":"SendPingRequestDirective"},"Enums/SWIM/Instance/SendPingRequestDirective.html#/s:4SWIMAAO8InstanceC24SendPingRequestDirectiveV7timeout8Dispatch0H12TimeIntervalOvp":{"name":"timeout","abstract":"<p>Timeout to be used for all the ping requests about to be sent.</p>","parent_name":"SendPingRequestDirective"},"Enums/SWIM/Instance/SendPingRequestDirective.html#/s:4SWIMAAO8InstanceC24SendPingRequestDirectiveV14requestDetailsSayAF0dE6DetailVGvp":{"name":"requestDetails","abstract":"<p>Describes the details how each ping request should be performed.</p>","parent_name":"SendPingRequestDirective"},"Enums/SWIM/Instance/SendPingRequestDirective/PingRequestDetail.html":{"name":"PingRequestDetail","abstract":"<p>Describes a specific ping request to be made.</p>","parent_name":"SendPingRequestDirective"},"Enums/SWIM/Instance/PingResponseDirective.html#/s:4SWIMAAO8InstanceC21PingResponseDirectiveO15gossipProcessedyAfD06GossipgE0OcAFmF":{"name":"gossipProcessed(_:)","abstract":"<p>Indicates that incoming gossip was processed and the membership may have changed because of it,","parent_name":"PingResponseDirective"},"Enums/SWIM/Instance/PingResponseDirective.html#/s:4SWIMAAO8InstanceC21PingResponseDirectiveO7sendAckyAfA25SWIMPingRequestOriginPeer_p_s6UInt32VAA8SWIMPeer_ps6UInt64VAB13GossipPayloadOtcAFmF":{"name":"sendAck(peer:acknowledging:target:incarnation:payload:)","abstract":"<p>Upon receiving an <code>ack</code> from <code>target</code>, if we were making this ping because of a <code>pingRequest</code> from <code>peer</code>,","parent_name":"PingResponseDirective"},"Enums/SWIM/Instance/PingResponseDirective.html#/s:4SWIMAAO8InstanceC21PingResponseDirectiveO8sendNackyAfA25SWIMPingRequestOriginPeer_p_s6UInt32VAA8SWIMPeer_ptcAFmF":{"name":"sendNack(peer:acknowledging:target:)","abstract":"<p>Send a <code>nack</code> to the <code>peer</code> which originally send this peer request.</p>","parent_name":"PingResponseDirective"},"Enums/SWIM/Instance/PingResponseDirective.html#/s:4SWIMAAO8InstanceC21PingResponseDirectiveO04sendC8RequestsyAfD04Sendc7RequestE0VcAFmF":{"name":"sendPingRequests(_:)","abstract":"<p>Send a <code>pingRequest</code> as described by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM/Instance/SendPingRequestDirective.html\">SendPingRequestDirective</a></code>.</p>","parent_name":"PingResponseDirective"},"Enums/SWIM/Instance/PingDirective.html#/s:4SWIMAAO8InstanceC13PingDirectiveO15gossipProcessedyAfD06GossipfD0OcAFmF":{"name":"gossipProcessed(_:)","abstract":"<p>Indicates that incoming gossip was processed and the membership may have changed because of it,","parent_name":"PingDirective"},"Enums/SWIM/Instance/PingDirective.html#/s:4SWIMAAO8InstanceC13PingDirectiveO7sendAckyAfA18SWIMPingOriginPeer_p_AA8SWIMPeer_ps6UInt64VAB13GossipPayloadOs6UInt32VtcAFmF":{"name":"sendAck(to:pingedTarget:incarnation:payload:acknowledging:)","abstract":"<p>Send an <code>ack</code> message.</p>","parent_name":"PingDirective"},"Enums/SWIM/Instance/PeriodicPingTickDirective.html#/s:4SWIMAAO8InstanceC25PeriodicPingTickDirectiveO17membershipChangedyAfB012MemberStatusH5EventVcAFmF":{"name":"membershipChanged(_:)","abstract":"<p>The membership has changed, e.g. a member was declared unreachable or dead and an event may need to be emitted.</p>","parent_name":"PeriodicPingTickDirective"},"Enums/SWIM/Instance/PeriodicPingTickDirective.html#/s:4SWIMAAO8InstanceC25PeriodicPingTickDirectiveO04sendD0yAfA8SWIMPeer_p_AB13GossipPayloadO8Dispatch0K12TimeIntervalOs6UInt32VtcAFmF":{"name":"sendPing(target:payload:timeout:sequenceNumber:)","abstract":"<p>Send a ping to the requested <code>target</code> peer using the provided timeout and sequenceNumber.</p>","parent_name":"PeriodicPingTickDirective"},"Enums/SWIM/Instance/PeriodicPingTickDirective.html#/s:4SWIMAAO8InstanceC25PeriodicPingTickDirectiveO012scheduleNextE0yAF8Dispatch0I12TimeIntervalO_tcAFmF":{"name":"scheduleNextTick(delay:)","abstract":"<p>Schedule the next timer <code>onPeriodicPingTick</code> invocation in <code>delay</code> time.</p>","parent_name":"PeriodicPingTickDirective"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC8settingsAB8SettingsVvp":{"name":"settings","abstract":"<p>The settings currently in use by this instance.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC6memberAB6MemberVvp":{"name":"member","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM/Member.html\">SWIM.Member</a></code> representing this instance, also referred to as &ldquo;myself&rdquo;.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC18nextSequenceNumbers6UInt32VyF":{"name":"nextSequenceNumber()","abstract":"<p>Sequence numbers are used to identify messages and pair them up into request/replies.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC21localHealthMultiplierSivp":{"name":"localHealthMultiplier","abstract":"<p>Lifeguard IV.A. Local Health Multiplier (LHM)</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC8settings6myselfAdB8SettingsV_AA8SWIMPeer_ptcfc":{"name":"init(settings:myself:)","abstract":"<p>Creates a new SWIM algorithm instance.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC18adjustLHMultiplieryyAD15LHModifierEventOF":{"name":"adjustLHMultiplier(_:)","abstract":"<p>Adjust the Local Health-aware Multiplier based on the event causing it.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC14protocolPeriodSivp":{"name":"protocolPeriod","abstract":"<p>Current SWIM protocol period (i.e. which round of gossip the instance is in).</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC16suspicionTimeout16suspectedByCount8Dispatch0H12TimeIntervalOSi_tF":{"name":"suspicionTimeout(suspectedByCount:)","abstract":"<p>Local Health Aware Suspicion timeout calculation, as defined Lifeguard IV.B.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC9isExpired8deadlineSb8Dispatch0F4TimeV_tF":{"name":"isExpired(deadline:)","abstract":"<p>Checks if a deadline is expired (relating to current time).</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC17makeGossipPayload2toAB0dE0OAA19SWIMAddressablePeer_pSg_tF":{"name":"makeGossipPayload(to:)","abstract":"<p>Create a gossip payload (i.e. a set of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM/Gossip.html\">SWIM.Gossip</a></code> messages) that should be gossiped with failure detector","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC6status2ofAB6StatusOSgAA19SWIMAddressablePeer_p_tF":{"name":"status(of:)","abstract":"<p>Returns status of the passed in peer&rsquo;s member of the cluster, if known.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC8isMember_9ignoreUIDSbAA19SWIMAddressablePeer_p_SbtF":{"name":"isMember(_:ignoreUID:)","abstract":"<p>Checks if the passed in peer is already a known member of the swim cluster.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC6member3forAB6MemberVSgAA19SWIMAddressablePeer_p_tF":{"name":"member(for:)","abstract":"<p>Returns specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM/Member.html\">SWIM.Member</a></code> instance for the passed in peer.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC6member3forAB6MemberVSg17ClusterMembership4NodeV_tF":{"name":"member(for:)","abstract":"<p>Returns specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM/Member.html\">SWIM.Member</a></code> instance for the passed in node.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC18notDeadMemberCountSivp":{"name":"notDeadMemberCount","abstract":"<p>Count of only non-dead members.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC16otherMemberCountSivp":{"name":"otherMemberCount","abstract":"<p>Count of all &ldquo;other&rdquo; members known to this instance (meaning members other than <code>myself</code>).</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC14allMemberCountSivp":{"name":"allMemberCount","abstract":"<p>Count of all members, including the myself node as well as any unreachable and dead nodes which are still kept in the membership.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC7membersSD6ValuesVy17ClusterMembership4NodeVAB6MemberV_Gvp":{"name":"members","abstract":"<p>Lists all members known to this SWIM instance currently, potentially including even <code>.dead</code> nodes.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIM12SWIMProtocolP18onPeriodicPingTickSayA2AO8InstanceC0deF9DirectiveOGyF":{"name":"onPeriodicPingTick()","parent_name":"Instance"},"Enums/SWIM/Instance/PeriodicPingTickDirective.html":{"name":"PeriodicPingTickDirective","abstract":"<p>Describes how a periodic tick should be handled.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIM12SWIMProtocolP6onPing10pingOrigin7payload14sequenceNumberSayA2AO8InstanceC0D9DirectiveOGAA08SWIMPingF4Peer_p_AH13GossipPayloadOs6UInt32VtF":{"name":"onPing(pingOrigin:payload:sequenceNumber:)","parent_name":"Instance"},"Enums/SWIM/Instance/PingDirective.html":{"name":"PingDirective","abstract":"<p>Directs a shell implementation about how to handle an incoming <code>.ping</code>.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIM12SWIMProtocolP14onPingResponse8response17pingRequestOrigin0gH14SequenceNumberSayA2AO8InstanceC0dE9DirectiveOGAH0dE0O_AA08SWIMPinghI4Peer_pSgs6UInt32VSgtF":{"name":"onPingResponse(response:pingRequestOrigin:pingRequestSequenceNumber:)","parent_name":"Instance"},"Enums/SWIM/Instance/PingResponseDirective.html":{"name":"PingResponseDirective","abstract":"<p>Directs a shell implementation about how to handle an incoming <code>.pingRequest</code>.</p>","parent_name":"Instance"},"Enums/SWIM/Instance/SendPingRequestDirective.html":{"name":"SendPingRequestDirective","abstract":"<p>Describes how a pingRequest should be performed.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIM12SWIMProtocolP13onPingRequest6target04pingE6Origin7payload14sequenceNumberSayA2AO8InstanceC0dE9DirectiveOGAA8SWIMPeer_p_AA08SWIMPingeH4Peer_pAI13GossipPayloadOs6UInt32VtF":{"name":"onPingRequest(target:pingRequestOrigin:payload:sequenceNumber:)","parent_name":"Instance"},"Enums/SWIM/Instance/PingRequestDirective.html":{"name":"PingRequestDirective","abstract":"<p>Directs a shell implementation about how to handle an incoming <code>.pingRequest</code>.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC21onPingRequestResponse_6pingedSayAD0deF9DirectiveOGAB0dF0O_AA8SWIMPeer_ptF":{"name":"onPingRequestResponse(_:pinged:)","abstract":"<p>This should be called on first successful (non-nack) pingRequestResponse</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIM12SWIMProtocolP26onEveryPingRequestResponse_6pingedSayA2AO8InstanceC0efG9DirectiveOGAF0eG0O_AA8SWIMPeer_ptF":{"name":"onEveryPingRequestResponse(_:pinged:)","parent_name":"Instance"},"Enums/SWIM/Instance/PingRequestResponseDirective.html":{"name":"PingRequestResponseDirective","abstract":"<p>Directs a shell implementation about how to handle an incoming ping request response.</p>","parent_name":"Instance"},"Enums/SWIM/Instance/GossipProcessedDirective.html":{"name":"GossipProcessedDirective","abstract":"<p>Indicates the gossip payload was processed and changes to the membership were made.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIM12SWIMProtocolP11confirmDead4peerA2AO8InstanceC07ConfirmD9DirectiveOAA8SWIMPeer_p_tF":{"name":"confirmDead(peer:)","parent_name":"Instance"},"Enums/SWIM/Instance/ConfirmDeadDirective.html":{"name":"ConfirmDeadDirective","abstract":"<p>Directs how to handle the result of a <code>confirmDead</code> call.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"Instance"},"Enums/SWIM/Instance/LHModifierEvent.html":{"name":"LHModifierEvent","abstract":"<p>Events which cause the modification of the Local health aware Multiplier to be adjusted.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC8metadataySDySS7Logging6LoggerV13MetadataValueOGAKF":{"name":"metadata(_:)","abstract":"<p>Allows for convenient adding of additional metadata to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC8metadataSDySS7Logging6LoggerV13MetadataValueOGvp\">SWIM.Instance.metadata</a></code>.</p>","parent_name":"Instance"},"Enums/SWIM/Instance.html#/s:4SWIMAAO8InstanceC8metadataSDySS7Logging6LoggerV13MetadataValueOGvp":{"name":"metadata","abstract":"<p>While the SWIM.Instance is not meant to be logging by itself, it does offer metadata for loggers to use.</p>","parent_name":"Instance"},"Enums/SWIM/GossipPayload.html#/s:4SWIMAAO13GossipPayloadO4noneyA2DmF":{"name":"none","abstract":"<p>Explicit case to signal &ldquo;no gossip payload&rdquo;</p>","parent_name":"GossipPayload"},"Enums/SWIM/GossipPayload.html#/s:4SWIMAAO13GossipPayloadO10membershipyADSayAB6MemberVGcADmF":{"name":"membership(_:)","abstract":"<p>Gossip information about a few select members.</p>","parent_name":"GossipPayload"},"Enums/SWIM/GossipPayload.html#/s:4SWIMAAO13GossipPayloadO6isNoneSbvp":{"name":"isNone","abstract":"<p>True if the underlying gossip is empty.</p>","parent_name":"GossipPayload"},"Enums/SWIM/GossipPayload.html#/s:4SWIMAAO13GossipPayloadO12isMembershipSbvp":{"name":"isMembership","abstract":"<p>True if the underlying gossip contains membership information.</p>","parent_name":"GossipPayload"},"Enums/SWIM/Gossip.html#/s:4SWIMAAO6GossipV6memberAB6MemberVvp":{"name":"member","abstract":"<p>The specific member (including status) that this gossip is about.</p>","parent_name":"Gossip"},"Enums/SWIM/Gossip.html#/s:4SWIMAAO6GossipV21numberOfTimesGossipedSivp":{"name":"numberOfTimesGossiped","abstract":"<p>The number of times this specific gossip message was gossiped to another peer.</p>","parent_name":"Gossip"},"Enums/SWIM/PingResponse.html#/s:4SWIMAAO12PingResponseO3ackyAdA8SWIMPeer_p_s6UInt64VAB13GossipPayloadOs6UInt32VtcADmF":{"name":"ack(target:incarnation:payload:sequenceNumber:)","parent_name":"PingResponse"},"Enums/SWIM/PingResponse.html#/s:4SWIMAAO12PingResponseO4nackyAdA8SWIMPeer_p_s6UInt32VtcADmF":{"name":"nack(target:sequenceNumber:)","abstract":"<p>A <code>.nack</code> MAY ONLY be sent by an <em>intermediary</em> member which was received a <code>pingRequest</code> to perform a <code>ping</code> of some <code>target</code> member.","parent_name":"PingResponse"},"Enums/SWIM/PingResponse.html#/s:4SWIMAAO12PingResponseO7timeoutyAdA8SWIMPeer_p_AA25SWIMPingRequestOriginPeer_pSg8Dispatch0J12TimeIntervalOs6UInt32VtcADmF":{"name":"timeout(target:pingRequestOrigin:timeout:sequenceNumber:)","abstract":"<p>This is a &ldquo;pseudo-message&rdquo;, in the sense that it is not transported over the wire, but should be triggered","parent_name":"PingResponse"},"Enums/SWIM/PingResponse.html#/s:4SWIMAAO12PingResponseO14sequenceNumbers6UInt32Vvp":{"name":"sequenceNumber","abstract":"<p>Sequence number of the initial request this is a response to.","parent_name":"PingResponse"},"Enums/SWIM/Member.html#/s:4SWIMAAO6MemberV4peerAA8SWIMPeer_pvp":{"name":"peer","abstract":"<p>Peer reference, used to send messages to this cluster member.</p>","parent_name":"Member"},"Enums/SWIM/Member.html#/s:4SWIMAAO6MemberV4node17ClusterMembership4NodeVvp":{"name":"node","abstract":"<p><code>Node</code> of the member&rsquo;s <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM/Member.html#/s:4SWIMAAO6MemberV4peerAA8SWIMPeer_pvp\">peer</a></code>.</p>","parent_name":"Member"},"Enums/SWIM/Member.html#/s:4SWIMAAO6MemberV6statusAB6StatusOvp":{"name":"status","abstract":"<p>Membership status of this cluster member</p>","parent_name":"Member"},"Enums/SWIM/Member.html#/s:4SWIMAAO6MemberV14protocolPeriodSivp":{"name":"protocolPeriod","abstract":"<p>Undocumented</p>","parent_name":"Member"},"Enums/SWIM/Member.html#/s:4SWIMAAO6MemberV23localSuspicionStartedAt8Dispatch0G4TimeVSgvp":{"name":"localSuspicionStartedAt","abstract":"<p>Indicates a <em>local</em> point in time when suspicion was started.</p>","parent_name":"Member"},"Enums/SWIM/Member.html#/s:4SWIMAAO6MemberV4peer6status14protocolPeriod18suspicionStartedAtAdA8SWIMPeer_p_AB6StatusOSi8Dispatch0L4TimeVSgtcfc":{"name":"init(peer:status:protocolPeriod:suspicionStartedAt:)","abstract":"<p>Create a new member.</p>","parent_name":"Member"},"Enums/SWIM/Member.html#/s:4SWIMAAO6MemberV7isAliveSbvp":{"name":"isAlive","abstract":"<p>Convenience function for checking if a member is <code>SWIM.Status.alive</code>.</p>","parent_name":"Member"},"Enums/SWIM/Member.html#/s:4SWIMAAO6MemberV9isSuspectSbvp":{"name":"isSuspect","abstract":"<p>Convenience function for checking if a member is <code>SWIM.Status.suspect</code>.</p>","parent_name":"Member"},"Enums/SWIM/Member.html#/s:4SWIMAAO6MemberV13isUnreachableSbvp":{"name":"isUnreachable","abstract":"<p>Convenience function for checking if a member is <code>SWIM.Status.unreachable</code></p>","parent_name":"Member"},"Enums/SWIM/Member.html#/s:4SWIMAAO6MemberV6isDeadSbvp":{"name":"isDead","abstract":"<p>Convenience function for checking if a member is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM/Status.html#/s:4SWIMAAO6StatusO4deadyA2DmF\">SWIM.Status.dead</a></code></p>","parent_name":"Member"},"Enums/SWIM/Member.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Member"},"Enums/SWIM/Member.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Member"},"Enums/SWIM/Member.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Member"},"Enums/SWIM/MemberStatusChangedEvent.html#/s:4SWIMAAO24MemberStatusChangedEventV6memberAB0B0Vvp":{"name":"member","abstract":"<p>The member that this change event is about.</p>","parent_name":"MemberStatusChangedEvent"},"Enums/SWIM/MemberStatusChangedEvent.html#/s:4SWIMAAO24MemberStatusChangedEventV6statusAB0C0Ovp":{"name":"status","abstract":"<p>The resulting (&ldquo;current&rdquo;) status of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM/MemberStatusChangedEvent.html#/s:4SWIMAAO24MemberStatusChangedEventV6memberAB0B0Vvp\">member</a></code>.</p>","parent_name":"MemberStatusChangedEvent"},"Enums/SWIM/MemberStatusChangedEvent.html#/s:4SWIMAAO24MemberStatusChangedEventV08previousC0AB0C0OSgvp":{"name":"previousStatus","abstract":"<p>Previous status of the member, needed in order to decide if the change is &ldquo;effective&rdquo; or if applying the","parent_name":"MemberStatusChangedEvent"},"Enums/SWIM/MemberStatusChangedEvent.html#/s:4SWIMAAO24MemberStatusChangedEventV08previousC06memberAdB0C0OSg_AB0B0Vtcfc":{"name":"init(previousStatus:member:)","abstract":"<p>Create new event, representing a change of the member&rsquo;s status from a previous state to its current state.</p>","parent_name":"MemberStatusChangedEvent"},"Enums/SWIM/MemberStatusChangedEvent.html#/s:4SWIMAAO24MemberStatusChangedEventV20isReachabilityChangeSbvp":{"name":"isReachabilityChange","abstract":"<p>Reachability changes are important events, in which a reachable node became unreachable, or vice-versa,","parent_name":"MemberStatusChangedEvent"},"Enums/SWIM/MemberStatusChangedEvent.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"MemberStatusChangedEvent"},"Enums/SWIM/MemberStatusChangedEvent.html":{"name":"MemberStatusChangedEvent","abstract":"<p>Emitted whenever a membership change happens.</p>","parent_name":"SWIM"},"Enums/SWIM/Member.html":{"name":"Member","abstract":"<p>A <code>SWIM.Member</code> represents an active participant of the cluster.</p>","parent_name":"SWIM"},"Enums/SWIM.html#/s:4SWIMAAO11Incarnationa":{"name":"Incarnation","abstract":"<p>Incarnation numbers serve as sequence number and used to determine which observation","parent_name":"SWIM"},"Enums/SWIM.html#/s:4SWIMAAO14SequenceNumbera":{"name":"SequenceNumber","abstract":"<p>A sequence number which can be used to associate with messages in order to establish an request/response","parent_name":"SWIM"},"Enums/SWIM.html#/s:4SWIMAAO10Membershipa":{"name":"Membership","abstract":"<p>Typealias for the underlying membership representation.</p>","parent_name":"SWIM"},"Enums/SWIM/PingResponse.html":{"name":"PingResponse","abstract":"<p>Message sent in reply to a <code>.ping</code>.</p>","parent_name":"SWIM"},"Enums/SWIM/Gossip.html":{"name":"Gossip","abstract":"<p>A piece of &ldquo;gossip&rdquo; about a specific member of the cluster.</p>","parent_name":"SWIM"},"Enums/SWIM/GossipPayload.html":{"name":"GossipPayload","abstract":"<p>A <code>GossipPayload</code> is used to spread gossips about members.</p>","parent_name":"SWIM"},"Enums/SWIM/Instance.html":{"name":"Instance","abstract":"<p>The <code>SWIM.Instance</code> encapsulates the complete algorithm implementation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SWIM.html\">SWIM</a></code> protocol.</p>","parent_name":"SWIM"},"Enums/SWIM/Settings.html":{"name":"Settings","abstract":"<p>Settings generally applicable to the SWIM implementation as well as any shell running it.</p>","parent_name":"SWIM"},"Enums/SWIM/Status.html":{"name":"Status","abstract":"<p>The SWIM membership status reflects how a node is perceived by the distributed failure detector.</p>","parent_name":"SWIM"},"Enums/SWIM.html":{"name":"SWIM","abstract":"<h2 id='scalable-weakly-consistent-infection-style-process-group-membership-protocol' class='heading'>Scalable Weakly-consistent Infection-style Process Group Membership Protocol</h2>"},"Documentation.html":{"name":"Documentation"},"Other%20Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Other%20Structs.html":{"name":"Other Structures","abstract":"<p>The following structures are available globally.</p>"}}